// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./aur-buildserver-next.sqlite"
}

model AurPackage {
  id        String @id @default(cuid())
  packageId Int    @unique

  lastModifiedDatabaseEntry DateTime @updatedAt

  versions AurPackageVersion[]

  // metadata
  name             String   @unique
  description      String?
  packageBaseId    Int
  packageBase      String
  maintainer       String?
  votes            Int
  popularity       Float
  firstSubmitted   DateTime
  lastModified     DateTime
  flaggedOutOfDate Boolean?
  currentVersion   String
  urlPath          String?
  url              String?

  dependencies AurDependency[]
  builds       AurPackageBuild[]
  gnupgKeys    GnupgKeys[]
}

model AurDependency {
  id                  String  @id @default(cuid())
  pkgId               String
  packageName         String
  strippedPackageName String
  isAur               Boolean

  package AurPackage @relation(fields: [pkgId], references: [id], onDelete: Cascade)
}

model AurPackageVersion {
  versionId String @id @default(cuid())
  pkgId     String

  pkgver  String
  pkgrel  String
  gitHash String @unique

  package AurPackage        @relation(fields: [pkgId], references: [id], onDelete: Cascade)
  build   AurPackageBuild[]
}

model AurPackageBuild {
  id        String @id
  pkgId     String
  versionId String

  taskJobId String @unique
  taskPid   Int?

  logFile    String
  running    Boolean
  startedAt  DateTime  @default(now())
  finishedAt DateTime?
  exitCode   Int?
  success    Boolean?
  failReason String?

  package AurPackage        @relation(fields: [pkgId], references: [id], onDelete: Cascade)
  version AurPackageVersion @relation(fields: [versionId], references: [versionId], onDelete: Cascade)
}

model GnupgKeys {
  id       String  @id @default(cuid())
  keyId    String
  accepted Boolean

  packageId Int        @unique
  package   AurPackage @relation(fields: [packageId], references: [packageId], onDelete: Cascade)
}
