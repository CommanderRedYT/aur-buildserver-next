/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/packages/remove": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Remove a package from database */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PackageByIdBody"];
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SuccessResponse"];
                    };
                };
                /** @description Error response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/packages/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add a new package to database */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PackageByNameBody"];
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SuccessResponse"];
                    };
                };
                /** @description Error response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/aur/search/{packageName}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                packageName: components["parameters"]["packageName"];
            };
            cookie?: never;
        };
        /** Search for an AUR package */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    packageName: components["parameters"]["packageName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SuccessResponse"] & {
                            data: components["schemas"]["SearchResult"] & {
                                knownPackages: {
                                    packageId: number;
                                }[];
                            };
                        };
                    };
                };
                /** @description Error response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/aur/fetchPkgbuild/{packageName}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                packageName: components["parameters"]["packageName"];
            };
            cookie?: never;
        };
        /** Get the pkgbuild of an AUR package */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    packageName: components["parameters"]["packageName"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SuccessResponse"] & {
                            /** @description The pkgbuild content */
                            data: string;
                        };
                    };
                };
                /** @description Error response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/packages/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all packages in database */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SuccessResponse"] & {
                            data: components["schemas"]["PackageFromDatabase"][];
                        };
                    };
                };
                /** @description Error response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        SuccessResponse: {
            success: boolean;
        };
        ErrorResponse: {
            success: boolean;
            error: string;
        };
        PackageByNameBody: {
            name: string;
        };
        PackageByIdBody: {
            id: string;
        };
        PackageFromDatabase: {
            id: string;
            packageId: number;
            /** Format: date-time */
            lastModifiedDatabaseEntry: string;
            name: string;
            description: string | null;
            packageBaseId: number;
            packageBase: string;
            maintainer: string | null;
            votes: number;
            popularity: number;
            /** Format: date-time */
            firstSubmitted: string;
            /** Format: date-time */
            lastModified: string;
            flaggedOutOfDate: boolean | null;
            currentVersion: string;
            urlPath: string | null;
            url: string | null;
        };
        BaseResult: {
            /** @description Number of search results */
            resultcount?: number;
            /** @description Type of API call */
            type?: string;
            /** @description API Version */
            version?: number;
        };
        /** @description Basic package information */
        PackageBasic: {
            ID?: number;
            /** @description From PKGBUILD `pkgname` */
            Name?: string;
            /** @description From PKGBUILD `pkgdesc` */
            Description?: string | null;
            PackageBaseID?: number;
            PackageBase?: string;
            Maintainer?: string | null;
            NumVotes?: number;
            Popularity?: number;
            /** @description UNIX timestamp */
            FirstSubmitted?: number;
            /** @description UNIX timestamp */
            LastModified?: number;
            /** @description UNIX timestamp, or null if not flagged */
            OutOfDate?: string | null;
            /** @description From PKGBUILD `pkgver`-`pkgrel` */
            Version?: string;
            /** @description Path to gzipped snapshot */
            URLPath?: string | null;
            /** @description From PKGBUILD `url` */
            URL?: string | null;
        };
        /** @description SearchResult contains a list of basic package information */
        SearchResult: components["schemas"]["BaseResult"] & {
            results?: components["schemas"]["PackageBasic"][];
        };
    };
    responses: never;
    parameters: {
        packageName: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
